apiVersion: v1
kind: Service
metadata:
  name: postgresql
  labels:
    {{- include "ofbiz-recon-demo.labels" . | nindent 4 }}
spec:
  clusterIP: None
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432
  selector: { app: postgresql }
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  labels:
    {{- include "ofbiz-recon-demo.labels" . | nindent 4 }}
spec:
  serviceName: postgresql
  replicas: 1
  selector:
    matchLabels: { app: postgresql }
  template:
    metadata:
      labels:
        app: postgresql
        {{- include "ofbiz-recon-demo.labels" . | nindent 12 }}
    spec:
      containers:
        - name: postgresql
          image: {{ .Values.postgresql.image }}
          env:
            - name: POSTGRES_USER
              valueFrom: { secretKeyRef: { name: ofbiz-pg-secret, key: username } }
            - name: POSTGRES_PASSWORD
              valueFrom: { secretKeyRef: { name: ofbiz-pg-secret, key: password } }
            - name: POSTGRES_DB
              valueFrom: { secretKeyRef: { name: ofbiz-pg-secret, key: database } }
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: data
              mountPath: /bitnami/postgresql
  volumeClaimTemplates:
    - metadata: { name: data }
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources: { requests: { storage: {{ .Values.postgresql.persistence.size }} } }

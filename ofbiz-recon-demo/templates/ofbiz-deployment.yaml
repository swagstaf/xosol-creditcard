apiVersion: v1
kind: Service
metadata:
  name: ofbiz
  labels:
    {{- include "ofbiz-recon-demo.labels" . | nindent 4 }}
spec:
  type: {{ .Values.ofbiz.service.type }}
  ports:
    - name: https
      port: {{ .Values.ofbiz.service.port }}
      targetPort: 8443
  selector: { app: ofbiz }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ofbiz
  labels:
    {{- include "ofbiz-recon-demo.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ofbiz.replicas }}
  selector: { matchLabels: { app: ofbiz } }
  template:
    metadata:
      labels:
        app: ofbiz
        {{- include "ofbiz-recon-demo.labels" . | nindent 12 }}
    spec:
      containers:
        - name: ofbiz
          image: {{ .Values.ofbiz.image }}
          env:
            - name: JAVA_OPTS
              value: {{ .Values.ofbiz.javaOpts | quote }}
            - name: OFBIZ_DB_ENDPOINT
              value: "jdbc:postgresql://postgresql:5432/{{ .Values.ofbiz.db.name }}"
            - name: OFBIZ_DB_USER
              value: {{ .Values.ofbiz.db.user | quote }}
            - name: OFBIZ_DB_PASSWORD
              valueFrom: { secretKeyRef: { name: {{ .Values.ofbiz.db.passwordSecretName }}, key: {{ .Values.ofbiz.db.passwordSecretKey }} } }
          ports:
            - containerPort: 8443
          readinessProbe:
            httpGet: { scheme: HTTPS, path: "/", port: 8443 }
            initialDelaySeconds: 30
          livenessProbe:
            httpGet: { scheme: HTTPS, path: "/", port: 8443 }
            initialDelaySeconds: 60
          volumeMounts:
            - name: ofbiz-data
              mountPath: /ofbiz/runtime/data
      volumes:
        - name: ofbiz-data
          persistentVolumeClaim: { claimName: ofbiz-data }

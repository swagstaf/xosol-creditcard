apiVersion: v1
kind: Service
metadata:
  name: nifi
spec:
  type: {{ .Values.nifi.service.type | default "ClusterIP" }}
  ports:
    - name: http
      port: {{ .Values.nifi.service.port }}
      targetPort: {{ .Values.nifi.service.port }}
  selector: { app: nifi }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nifi
spec:
  replicas: {{ .Values.nifi.replicas }}
  selector: { matchLabels: { app: nifi } }
  template:
    metadata: { labels: { app: nifi } }
    spec:
      containers:
        - name: nifi
          image: {{ .Values.nifi.image }}
          env:
            {{- range $k, $v := .Values.nifi.env }}
            - name: {{ $k }}
              value: {{ $v | quote }}
            {{- end }}
          ports: [ { containerPort: {{ .Values.nifi.service.port }}, name: http } ]
          volumeMounts:
            - { name: nifi-content, mountPath: /opt/nifi/nifi-current/content_repository }
            - { name: nifi-provenance, mountPath: /opt/nifi/nifi-current/provenance_repository }
            - { name: nifi-state, mountPath: /opt/nifi/nifi-current/state }
      volumes:
        - { name: nifi-content, persistentVolumeClaim: { claimName: nifi-content } }
        - { name: nifi-provenance, persistentVolumeClaim: { claimName: nifi-provenance } }
        - { name: nifi-state, persistentVolumeClaim: { claimName: nifi-state } }
